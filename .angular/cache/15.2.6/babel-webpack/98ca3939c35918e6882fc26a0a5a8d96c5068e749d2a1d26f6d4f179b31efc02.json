{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TaskService {\n  addTask(task) {\n    const tasks = this.getTasks();\n    tasks.push(task);\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n  deleteTask(index) {\n    const tasks = this.getTasks();\n    tasks.splice(index, 1);\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n  updateTask(index, task) {\n    const tasks = this.getTasks();\n    tasks[index] = task;\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n  getTasks() {\n    const tasksString = localStorage.getItem('tasks');\n    return tasksString ? JSON.parse(tasksString) : [];\n  }\n  updateTaskCompletion(index, completed) {\n    const tasks = this.getTasks();\n    tasks[index].completed = completed;\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n  constructor() {\n    this.todoList = [];\n  }\n}\nTaskService.ɵfac = function TaskService_Factory(t) {\n  return new (t || TaskService)();\n};\nTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TaskService,\n  factory: TaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,WAAW;EAGtBC,OAAO,CAACC,IAAU;IAChB,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,EAAE;IAC7BD,KAAK,CAACE,IAAI,CAACH,IAAI,CAAC;IAChBI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC,CAAC;EACtD;EAEAO,UAAU,CAACC,KAAa;IACtB,MAAMR,KAAK,GAAG,IAAI,CAACC,QAAQ,EAAE;IAC7BD,KAAK,CAACS,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACtBL,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC,CAAC;EACtD;EAEAU,UAAU,CAACF,KAAa,EAAET,IAAU;IAClC,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,EAAE;IAC7BD,KAAK,CAACQ,KAAK,CAAC,GAAGT,IAAI;IACnBI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC,CAAC;EACtD;EAEAC,QAAQ;IACN,MAAMU,WAAW,GAAGR,YAAY,CAACS,OAAO,CAAC,OAAO,CAAC;IACjD,OAAOD,WAAW,GAAGN,IAAI,CAACQ,KAAK,CAACF,WAAW,CAAC,GAAG,EAAE;EACnD;EAEAG,oBAAoB,CAACN,KAAa,EAAEO,SAAkB;IACpD,MAAMf,KAAK,GAAG,IAAI,CAACC,QAAQ,EAAE;IAC7BD,KAAK,CAACQ,KAAK,CAAC,CAACO,SAAS,GAAGA,SAAS;IAClCZ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC,CAAC;EACtD;EAEAgB;IA/BQ,aAAQ,GAAW,EAAE;EA+Bb;;AAhCLnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["TaskService","addTask","task","tasks","getTasks","push","localStorage","setItem","JSON","stringify","deleteTask","index","splice","updateTask","tasksString","getItem","parse","updateTaskCompletion","completed","constructor","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\pipem\\Desktop\\proyectos-sin-tutoriales\\angular-projects\\to-do-list\\src\\app\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Task } from './task-list/task-list.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private todoList: Task[] = [];\n\n  addTask(task: Task) {\n    const tasks = this.getTasks();\n    tasks.push(task);\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  deleteTask(index: number) {\n    const tasks = this.getTasks();\n    tasks.splice(index, 1);\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  updateTask(index: number, task: Task) {\n    const tasks = this.getTasks();\n    tasks[index] = task;\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  getTasks(): Task[] {\n    const tasksString = localStorage.getItem('tasks');\n    return tasksString ? JSON.parse(tasksString) : [];\n  }\n\n  updateTaskCompletion(index: number, completed: boolean) {\n    const tasks = this.getTasks();\n    tasks[index].completed = completed;\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n  \n  constructor() { }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}