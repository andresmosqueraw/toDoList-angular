{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction TaskListComponent_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskListComponent_li_14_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(task_r1.completed = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\");\n    i0.ɵɵtext(5, \"Eliminar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", task_r1.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"completed\", task_r1.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r1.title);\n  }\n}\nexport class TaskListComponent {\n  filterTasks(status) {\n    if (status === 'completadas') {\n      this.tasks = this.tasks.filter(task => task.completed);\n    } else if (status === 'pendientes') {\n      this.tasks = this.tasks.filter(task => !task.completed);\n    }\n  }\n  addTask() {\n    if (this.newTask.title.trim().length === 0) {\n      return;\n    }\n    this.tasks.push(this.newTask);\n    this.newTask = {\n      title: '',\n      completed: false\n    };\n  }\n  constructor() {\n    this.totalTasks = 0;\n    this.completedTasks = 0;\n    this.tasks = [{\n      title: 'Tarea 1',\n      completed: false\n    }, {\n      title: 'Tarea 2',\n      completed: true\n    }, {\n      title: 'Tarea 3',\n      completed: false\n    }, {\n      title: 'Tarea 4',\n      completed: true\n    }, {\n      title: 'Tarea 5',\n      completed: false\n    }];\n    this.newTask = {\n      title: '',\n      completed: false\n    };\n  }\n  ngOnInit() {\n    // Carga las tareas desde algún lugar y actualiza las propiedades de totalTasks y completedTasks\n    this.totalTasks = this.tasks.length;\n    this.completedTasks = this.tasks.filter(task => task.completed).length;\n  }\n}\nTaskListComponent.ɵfac = function TaskListComponent_Factory(t) {\n  return new (t || TaskListComponent)();\n};\nTaskListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskListComponent,\n  selectors: [[\"app-task-list\"]],\n  decls: 20,\n  vars: 4,\n  consts: [[3, \"submit\"], [\"for\", \"task-title\"], [\"type\", \"text\", \"name\", \"taskTitle\", \"placeholder\", \"Nueva tarea\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [1, \"statistics\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function TaskListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"To-Do-List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function TaskListComponent_Template_form_submit_2_listener() {\n        return ctx.addTask();\n      });\n      i0.ɵɵelementStart(3, \"label\", 1);\n      i0.ɵɵtext(4, \"T\\u00EDtulo de la tarea:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskListComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.newTask.title = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵtext(7, \"Agregar tarea\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\")(9, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_9_listener() {\n        return ctx.filterTasks(\"completadas\");\n      });\n      i0.ɵɵtext(10, \"Completadas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_11_listener() {\n        return ctx.filterTasks(\"pendientes\");\n      });\n      i0.ɵɵtext(12, \"Pendientes\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"ul\");\n      i0.ɵɵtemplate(14, TaskListComponent_li_14_Template, 6, 4, \"li\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 6)(16, \"p\");\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"p\");\n      i0.ɵɵtext(19);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.title);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Hay \", ctx.totalTasks, \" tareas pendientes.\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"El \", ctx.completedTasks / ctx.totalTasks * 100, \"% de las tareas est\\u00E1n completadas.\");\n    }\n  },\n  dependencies: [i1.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"li[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    margin: 0.5rem 0;\\r\\n}\\r\\n\\r\\ninput[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\r\\n    margin-right: 0.5rem;\\r\\n}\\r\\n\\r\\nspan[_ngcontent-%COMP%] {\\r\\n    flex: 1;\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.completed[_ngcontent-%COMP%] {\\r\\n    text-decoration: line-through;\\r\\n}\\r\\n\\r\\n.statistics[_ngcontent-%COMP%] {\\r\\n    margin-top: 20px;\\r\\n    padding: 10px;\\r\\n    background-color: #eee;\\r\\n    border-radius: 5px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxPQUFPO0lBQ1AscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0FBQ3RCIiwic291cmNlc0NvbnRlbnQiOlsibGkge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtYXJnaW46IDAuNXJlbSAwO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XHJcbn1cclxuXHJcbnNwYW4ge1xyXG4gICAgZmxleDogMTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuLmNvbXBsZXRlZCB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcclxufVxyXG5cclxuLnN0YXRpc3RpY3Mge1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","TaskListComponent","filterTasks","status","tasks","filter","task","completed","addTask","newTask","title","trim","length","push","constructor","ngOnInit","totalTasks","completedTasks","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\pipem\\Desktop\\proyectos-sin-tutoriales\\angular-projects\\to-do-list\\src\\app\\task-list\\task-list.component.html","C:\\Users\\pipem\\Desktop\\proyectos-sin-tutoriales\\angular-projects\\to-do-list\\src\\app\\task-list\\task-list.component.ts"],"sourcesContent":["<h1>To-Do-List</h1>\n<!-- HTML del formulario en el componente de lista de tareas -->\n<form (submit)=\"addTask()\">\n    <label for=\"task-title\">Título de la tarea:</label>\n    <input type=\"text\" [(ngModel)]=\"newTask.title\" name=\"taskTitle\" placeholder=\"Nueva tarea\">\n    <button type=\"submit\">Agregar tarea</button>\n</form>\n\n<div>\n    <button (click)=\"filterTasks('completadas')\">Completadas</button>\n    <button (click)=\"filterTasks('pendientes')\">Pendientes</button>\n</div>\n\n<ul>\n    <li *ngFor=\"let task of tasks\">\n        <input type=\"checkbox\" [(ngModel)]=\"task.completed\">\n        <span [class.completed]=\"task.completed\">{{ task.title }}</span>\n        <button>Eliminar</button>\n    </li>\n</ul>\n\n<div class=\"statistics\">\n    <p>Hay {{ totalTasks }} tareas pendientes.</p>\n    <p>El {{ completedTasks / totalTasks * 100 }}% de las tareas están completadas.</p>\n</div>","import { Component, OnInit } from '@angular/core';\n\ninterface Task {\n  title: string;\n  completed: boolean;\n}\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n  totalTasks: number = 0;\n  completedTasks: number = 0;\n\n  tasks: Task[] = [\n    { title: 'Tarea 1', completed: false },\n    { title: 'Tarea 2', completed: true },\n    { title: 'Tarea 3', completed: false },\n    { title: 'Tarea 4', completed: true },\n    { title: 'Tarea 5', completed: false }\n  ];\n\n  filterTasks(status: 'completadas' | 'pendientes') {\n    if (status === 'completadas') {\n      this.tasks = this.tasks.filter(task => task.completed);\n    } else if (status === 'pendientes') {\n      this.tasks = this.tasks.filter(task => !task.completed);\n    }\n  }\n\n  newTask: Task = { title: '', completed: false };\n  \n  addTask() {\n    if (this.newTask.title.trim().length === 0) {\n      return;\n    }\n\n    this.tasks.push(this.newTask);\n\n    this.newTask = { title: '', completed: false };\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n    // Carga las tareas desde algún lugar y actualiza las propiedades de totalTasks y completedTasks\n    this.totalTasks = this.tasks.length;\n    this.completedTasks = this.tasks.filter(task => task.completed).length;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}